[{"C:\\Others\\Git\\MusicApp\\music-player\\pages\\artists\\index.tsx":"1","C:\\Others\\Git\\MusicApp\\music-player\\pages\\artists\\[id].tsx":"2","C:\\Others\\Git\\MusicApp\\music-player\\pages\\index.tsx":"3","C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\add\\index.tsx":"4","C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\add\\validate.ts":"5","C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\index.tsx":"6","C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\[id].tsx":"7","C:\\Others\\Git\\MusicApp\\music-player\\pages\\search\\index.tsx":"8","C:\\Others\\Git\\MusicApp\\music-player\\pages\\songs\\[id].tsx":"9","C:\\Others\\Git\\MusicApp\\music-player\\pages\\_app.tsx":"10","C:\\Others\\Git\\MusicApp\\music-player\\components\\artists-list\\artists-list.tsx":"11","C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\forward-button.tsx":"12","C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\pause-button.tsx":"13","C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\play-button.tsx":"14","C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\rewind-button.tsx":"15","C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\shuffle-button.tsx":"16","C:\\Others\\Git\\MusicApp\\music-player\\components\\header\\index.tsx":"17","C:\\Others\\Git\\MusicApp\\music-player\\components\\index.ts":"18","C:\\Others\\Git\\MusicApp\\music-player\\components\\meta-tags.tsx":"19","C:\\Others\\Git\\MusicApp\\music-player\\components\\navigation\\navigation.tsx":"20","C:\\Others\\Git\\MusicApp\\music-player\\components\\playlists\\playlists.tsx":"21","C:\\Others\\Git\\MusicApp\\music-player\\components\\search\\found-items-list.tsx":"22","C:\\Others\\Git\\MusicApp\\music-player\\components\\search\\index.tsx":"23","C:\\Others\\Git\\MusicApp\\music-player\\components\\songs-list\\songs-list.tsx":"24"},{"size":1001,"mtime":1638367839307,"results":"25","hashOfConfig":"26"},{"size":1981,"mtime":1639728519841,"results":"27","hashOfConfig":"26"},{"size":973,"mtime":1641124205393,"results":"28","hashOfConfig":"26"},{"size":3851,"mtime":1641203946002,"results":"29","hashOfConfig":"26"},{"size":516,"mtime":1641246386981,"results":"30","hashOfConfig":"26"},{"size":1546,"mtime":1638367883280,"results":"31","hashOfConfig":"26"},{"size":5828,"mtime":1641199629310,"results":"32","hashOfConfig":"26"},{"size":947,"mtime":1636696582842,"results":"33","hashOfConfig":"26"},{"size":3207,"mtime":1641117583150,"results":"34","hashOfConfig":"26"},{"size":459,"mtime":1632578129413,"results":"35","hashOfConfig":"26"},{"size":724,"mtime":1639728495222,"results":"36","hashOfConfig":"26"},{"size":783,"mtime":1640008895022,"results":"37","hashOfConfig":"26"},{"size":529,"mtime":1640007975634,"results":"38","hashOfConfig":"26"},{"size":557,"mtime":1640008429782,"results":"39","hashOfConfig":"26"},{"size":775,"mtime":1640008872002,"results":"40","hashOfConfig":"26"},{"size":919,"mtime":1640008027617,"results":"41","hashOfConfig":"26"},{"size":420,"mtime":1639728353292,"results":"42","hashOfConfig":"26"},{"size":858,"mtime":1640008947265,"results":"43","hashOfConfig":"26"},{"size":846,"mtime":1632751405873,"results":"44","hashOfConfig":"26"},{"size":2134,"mtime":1641246217652,"results":"45","hashOfConfig":"26"},{"size":743,"mtime":1639728464630,"results":"46","hashOfConfig":"26"},{"size":1965,"mtime":1641130145551,"results":"47","hashOfConfig":"26"},{"size":1353,"mtime":1639675199169,"results":"48","hashOfConfig":"26"},{"size":703,"mtime":1639728416324,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4o48e",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},"C:\\Others\\Git\\MusicApp\\music-player\\pages\\artists\\index.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\pages\\artists\\[id].tsx",["108"],"import type { NextPage } from \"next\";\r\nimport { getArtists, getArtist } from \"../../utils/db\";\r\nimport { MetaTags } from \"../../components/index\";\r\nimport ArtistDetailsInterface from \"../../utils/interfaces/ArtistDetails\";\r\nimport styles from \"./ArtistDetails.module.scss\";\r\n\r\ninterface IProps extends React.ClassAttributes<ArtistDetailsInterface> {\r\n  artist: ArtistDetailsInterface;\r\n}\r\n\r\nconst Artist: NextPage<IProps> = (props: IProps) => {\r\n  const artist = props.artist;\r\n\r\n  return (\r\n    <div>\r\n      <MetaTags title=\"Artist Details\" description=\"Artist details page\" />\r\n      <div className={styles.container}>\r\n        <div key={artist.id}>\r\n          <h2 className={styles.name}>{artist.name}</h2>\r\n          <p>({artist?.artistsNames?.map((n) => n).join(\", \")})</p>\r\n          {artist.age ? <h4>Age: {artist.age}</h4> : null}\r\n          <img src={artist.url} alt={artist.name} />\r\n          <h4>Top 5 songs:</h4>\r\n          <ol className={styles.topSongs}>\r\n            {artist?.top5Songs?.map((s, idx) => (\r\n              <li key={idx}>{s}</li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface IContext {\r\n  params: { id: number };\r\n}\r\nexport async function getStaticProps(context: IContext) {\r\n  const id = Number(context.params.id);\r\n  const artist = await getArtist(id);\r\n  return { props: { artist } };\r\n  // const artist = JSON.stringify({\r\n  //   id,\r\n  //   name: \"Alice Johnson\",\r\n  //   age: 28,\r\n  //   url: \"https://www.masteroilpainting.com/wp-content/uploads/2018/01/AdobeStock_179466839-1024x683.jpeg\",\r\n  //   top5Songs: [\"dsad\", \"dsadas\", \"dsada\", \"dsada\", \"sdad\"],\r\n  // });\r\n  // return {\r\n  //   props: {\r\n  //     artist,\r\n  //   },\r\n  // };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const artists = await getArtists();\r\n  const paths = artists?.map((artist) => ({\r\n    params: { id: artist.id.toString() },\r\n  }));\r\n  return { paths, fallback: \"blocking\" };\r\n}\r\n\r\nexport default Artist;\r\n","C:\\Others\\Git\\MusicApp\\music-player\\pages\\index.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\add\\index.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\add\\validate.ts",[],"C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\index.tsx",["109"],"import type { NextPage } from \"next\";\r\nimport Link from \"next/link\";\r\nimport { MetaTags } from \"../../components/index\";\r\nimport { Playlist } from \"../../components/index\";\r\nimport { getPlaylists } from \"../../utils/db\";\r\nimport PlaylistInterface from \"../../utils/interfaces/Playlist\";\r\nimport styles from \"./Playlists.module.scss\";\r\n\r\ninterface Props {\r\n  playlists: PlaylistInterface[];\r\n}\r\n\r\nconst Playlists: NextPage<Props> = (props) => {\r\n  const playlists = props.playlists;\r\n\r\n  return (\r\n    <div>\r\n      <MetaTags title=\"Playlists\" description=\"Playlists page\" />\r\n      <div className={styles.container}>\r\n        <div className={styles.link}>\r\n          <Link href=\"/playlists/add\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"3em\" height=\"3em\">\r\n              <path d=\"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm0,22A10,10,0,1,1,22,12,10.011,10.011,0,0,1,12,22Zm5-10a1,1,0,0,1-1,1H13v3a1,1,0,0,1-2,0V13H8a1,1,0,0,1,0-2h3V8a1,1,0,0,1,2,0v3h3A1,1,0,0,1,17,12Z\" />\r\n            </svg>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.heading}>\r\n          <h1>Playlists</h1>\r\n        </div>\r\n        <Playlist playlists={playlists} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n\r\nexport async function getStaticProps() {\r\n  const playlists = await getPlaylists();\r\n\r\n  return {\r\n    props: {\r\n      playlists: playlists?.map((playlist) => ({\r\n        id: playlist.id,\r\n        title: playlist.title,\r\n        imageUrl: playlist.imageUrl,\r\n      })),\r\n    },\r\n    revalidate: 5,\r\n  };\r\n}\r\n","C:\\Others\\Git\\MusicApp\\music-player\\pages\\playlists\\[id].tsx",["110","111","112"],"import type { NextPage } from \"next\";\r\nimport { useState, useRef } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { getPlaylist, getSongsDetailsInPlaylist } from \"../../utils/db\";\r\nimport {\r\n  MetaTags,\r\n  PauseButton,\r\n  ShuffleButton,\r\n  PlayButton,\r\n  RewindButton,\r\n  ForwardButton,\r\n} from \"../../components/index\";\r\nimport PlaylistInterface from \"../../utils/interfaces/Playlist\";\r\nimport SongDetailsInterface from \"../../utils/interfaces/SongDetails\";\r\nimport styles from \"./PlaylistDetails.module.scss\";\r\n\r\ninterface IProps extends React.ClassAttributes<PlaylistInterface> {\r\n  playlist: PlaylistInterface;\r\n  songDetails: Array<SongDetailsInterface>;\r\n}\r\n\r\nconst PlaylistDetails: NextPage<IProps> = (props: IProps) => {\r\n  const audioRef = useRef() as React.MutableRefObject<HTMLAudioElement>;\r\n  const [isStarted, setIsStarted] = useState<boolean>(false);\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(true);\r\n  const [currentPlayingUrl, setCurrentPlayingUrl] = useState<string>(\"\");\r\n  const [index, setIndex] = useState<number>(0);\r\n  const [songUrls, setSongUrls] = useState<Array<string>>([]);\r\n\r\n  const playlist = props.playlist;\r\n  let songDetails = props.songDetails;\r\n\r\n  const startPlaylist = (isShuffle: boolean) => {\r\n    if (isShuffle) songDetails = songDetails.sort(() => 0.5 - Math.random());\r\n    setIsStarted(true);\r\n    const urls: Array<string> = [];\r\n\r\n    songDetails.forEach((s) => {\r\n      urls.push(s.songUrl);\r\n    });\r\n    setSongUrls(urls);\r\n    setCurrentPlayingUrl(urls[index]);\r\n  };\r\n\r\n  const previousSong = (idx: number) => {\r\n    const previousSongIndex = idx - 1;\r\n\r\n    if (previousSongIndex >= 0) {\r\n      setCurrentPlayingUrl(songUrls[idx - 1]);\r\n      setIndex(idx - 1);\r\n    }\r\n  };\r\n\r\n  const nextSong = (idx: number) => {\r\n    const nextSongIndex = idx + 1;\r\n\r\n    if (nextSongIndex >= songUrls.length) {\r\n      setCurrentPlayingUrl(songUrls[0]);\r\n      setIndex(0);\r\n    } else {\r\n      setCurrentPlayingUrl(songUrls[idx + 1]);\r\n      setIndex(idx + 1);\r\n    }\r\n  };\r\n\r\n  const toggleSongPlaying = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MetaTags title=\"Playlist Details\" description=\"Playlist details page\" />\r\n      <div className={styles.container}>\r\n        <div className={styles.player}>\r\n          <audio\r\n            controls\r\n            src={currentPlayingUrl}\r\n            ref={audioRef}\r\n            onEnded={() => nextSong(index)}\r\n            autoPlay\r\n          >\r\n            Your browser does not support the\r\n            <code>audio</code> element.\r\n          </audio>\r\n        </div>\r\n\r\n        <div key={playlist.id}>\r\n          <h2>{playlist.title}</h2>\r\n          <img src={playlist.imageUrl} alt={playlist.title} />\r\n\r\n          <div className={styles.buttonSection}>\r\n            <div>\r\n              {isStarted ? (\r\n                <div className={styles.buttonSection}>\r\n                  <div onClick={() => previousSong(index)}>\r\n                    <RewindButton />\r\n                  </div>\r\n                  {isPlaying ? (\r\n                    <div onClick={() => toggleSongPlaying()}>\r\n                      <PauseButton />\r\n                    </div>\r\n                  ) : (\r\n                    <div onClick={() => toggleSongPlaying()}>\r\n                      <PlayButton />\r\n                    </div>\r\n                  )}\r\n                  <div onClick={() => nextSong(index)}>\r\n                    <ForwardButton />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className={styles.buttonSection}>\r\n                  <div onClick={() => startPlaylist(false)}>\r\n                    <PlayButton />\r\n                  </div>\r\n                  <div onClick={() => startPlaylist(true)}>\r\n                    <ShuffleButton />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={styles.wrapper}>\r\n            <div className={styles.row}>\r\n              <li key=\"-2\">\r\n                <b>#</b>\r\n              </li>\r\n              <li key=\"-1\">\r\n                <b>Title</b>\r\n              </li>\r\n              <li key=\"0\">\r\n                <b>Duration</b>\r\n              </li>\r\n            </div>\r\n            <ol>\r\n              {songDetails.map((song, idx) => {\r\n                const classStr = idx === index ? styles.playing : \"\";\r\n                return (\r\n                  <Link href={`/songs/${song.id}`} key={song.id}>\r\n                    <div className={classStr}>\r\n                      <div className={styles.row}>\r\n                        <div>\r\n                          <p>{idx + 1}</p>\r\n                        </div>\r\n                        <div className={styles.group}>\r\n                          <img src={song.imageUrl} alt={song.title} />\r\n                          <p>{song.title}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p>{song.duration}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface IContext {\r\n  params: { id: string };\r\n}\r\n\r\nexport async function getServerSideProps(context: IContext) {\r\n  const id = Number(context.params.id);\r\n  const playlist = await getPlaylist(id);\r\n\r\n  const songDetails = await getSongsDetailsInPlaylist(playlist?.id);\r\n  const songDetailsArray = Object.entries(songDetails).map((e) => e[1]);\r\n\r\n  return {\r\n    props: {\r\n      playlist,\r\n      songDetails: songDetailsArray,\r\n    },\r\n  };\r\n}\r\n\r\nexport default PlaylistDetails;\r\n","C:\\Others\\Git\\MusicApp\\music-player\\pages\\search\\index.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\pages\\songs\\[id].tsx",["113","114"],"import type { NextPage } from \"next\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { getSongs, getSongsCount, getSong, getSongUrl } from \"../../utils/db\";\r\nimport {\r\n  MetaTags,\r\n  PauseButton,\r\n  PlayButton,\r\n  RewindButton,\r\n  ForwardButton,\r\n} from \"../../components/index\";\r\nimport SongDetailsInterface from \"../../utils/interfaces/SongDetails\";\r\nimport styles from \"./Song.module.scss\";\r\n\r\ninterface Props {\r\n  song: SongDetailsInterface;\r\n}\r\n\r\nconst Song: NextPage<Props> = (props) => {\r\n  const router = useRouter();\r\n  const audioRef = useRef() as React.MutableRefObject<HTMLAudioElement>;\r\n  const song = props.song;\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(true);\r\n  const [songUrl, setSongUrl] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    setSongUrl(song.songUrl);\r\n  });\r\n\r\n  function playPrevious() {\r\n    if (song.id > 1) {\r\n      setSongUrl(\"\");\r\n      router.push(`/songs/${song.id - 1}`);\r\n    }\r\n  }\r\n\r\n  function toggleSongPlaying() {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  async function playNext() {\r\n    const songsCount = await getSongsCount();\r\n    if (song.id < songsCount) {\r\n      setSongUrl(\"\");\r\n      router.push(`/songs/${song.id + 1}`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <MetaTags title=\"Song Details\" description=\"Song details page\" />\r\n      <div className={styles.content}>\r\n        <div className={styles.card}>\r\n          <h2>{song.title}</h2>\r\n          <img src={song.imageUrl} alt={song.title} />\r\n          <audio\r\n            controls\r\n            src={songUrl}\r\n            ref={audioRef}\r\n            onEnded={() => playNext()}\r\n            autoPlay\r\n          >\r\n            Your browser does not support the\r\n            <code>audio</code> element.\r\n          </audio>\r\n          <div className={styles.controlPanel}>\r\n            <div className={styles.songBtn} onClick={playPrevious}>\r\n              <RewindButton />\r\n            </div>\r\n            {isPlaying ? (\r\n              <div className={styles.songBtn} onClick={toggleSongPlaying}>\r\n                <PauseButton />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.songBtn} onClick={toggleSongPlaying}>\r\n                <PlayButton />\r\n              </div>\r\n            )}\r\n            <div className={styles.songBtn} onClick={playNext}>\r\n              <ForwardButton />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n\r\ninterface IContext {\r\n  params: { id: number };\r\n}\r\n\r\nexport async function getStaticProps(context: IContext) {\r\n  const id = Number(context.params.id);\r\n  const song = await getSong(id);\r\n  const songUrl = await getSongUrl(song?.title);\r\n\r\n  return {\r\n    props: {\r\n      song: { ...song, songUrl },\r\n    },\r\n    revalidate: 5,\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const songs = await getSongs();\r\n  const paths = songs?.map((song) => ({\r\n    params: { id: song.id.toString() },\r\n  }));\r\n  return { paths, fallback: \"blocking\" };\r\n}\r\n","C:\\Others\\Git\\MusicApp\\music-player\\pages\\_app.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\artists-list\\artists-list.tsx",["115","116"],"import Link from \"next/link\";\r\nimport ArtistsInterface from \"../../utils/interfaces/Artist\";\r\nimport styles from \"./ArtistsList.module.scss\";\r\n\r\ninterface Props extends React.ClassAttributes<any> {\r\n  artists: ArtistsInterface[];\r\n}\r\n\r\nconst ArtistsList = ({ artists }: Props) => {\r\n  return (\r\n    <div className={styles.artists}>\r\n      {artists.map(function (s, idx) {\r\n        const artistLink = `/artists/${s.id}`;\r\n\r\n        return (\r\n          <div className={styles.artist} key={idx}>\r\n            <Link href={artistLink}>\r\n              <img src={s.url} alt={s.name} />\r\n            </Link>\r\n            <p>{s.name}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;\r\n","C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\forward-button.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\pause-button.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\play-button.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\rewind-button.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\buttons\\shuffle-button.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\header\\index.tsx",["117"],"import { Search } from \"../index\";\r\nimport styles from \"./Header.module.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <div className={styles.header}>\r\n        <div className={styles.logo}>\r\n          <img src=\"/images/logo.png\" alt=\"logo\" />\r\n        </div>\r\n        <div className={styles.searchBox}>\r\n          <Search />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Others\\Git\\MusicApp\\music-player\\components\\index.ts",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\meta-tags.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\navigation\\navigation.tsx",["118","119","120"],"import Link from \"next/link\";\r\nimport styles from \"./Navigation.module.scss\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.links}>\r\n        <Link href=\"/\">\r\n          <div className={styles.link}>\r\n            <div className={styles.icon}>\r\n              <svg viewBox=\"0 0 512 512\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M470.38 1.51L150.41 96A32 32 0 0 0 128 126.51v261.41A139 139 0 0 0 96 384c-53 0-96 28.66-96 64s43 64 96 64 96-28.66 96-64V214.32l256-75v184.61a138.4 138.4 0 0 0-32-3.93c-53 0-96 28.66-96 64s43 64 96 64 96-28.65 96-64V32a32 32 0 0 0-41.62-30.49z\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n            <li>Songs</li>\r\n          </div>\r\n        </Link>\r\n        <Link href=\"/artists\">\r\n          <div className={styles.link}>\r\n            <div className={styles.icon}>\r\n              <svg viewBox=\"0 0 24 24\">\r\n                <path d=\"M7.5,13A4.5,4.5,0,1,1,12,8.5,4.505,4.505,0,0,1,7.5,13Zm0-7A2.5,2.5,0,1,0,10,8.5,2.5,2.5,0,0,0,7.5,6ZM15,23v-.5a7.5,7.5,0,0,0-15,0V23a1,1,0,0,0,2,0v-.5a5.5,5.5,0,0,1,11,0V23a1,1,0,0,0,2,0Zm9-5a7,7,0,0,0-11.667-5.217,1,1,0,1,0,1.334,1.49A5,5,0,0,1,22,18a1,1,0,0,0,2,0ZM17.5,9A4.5,4.5,0,1,1,22,4.5,4.505,4.505,0,0,1,17.5,9Zm0-7A2.5,2.5,0,1,0,20,4.5,2.5,2.5,0,0,0,17.5,2Z\" />\r\n              </svg>\r\n            </div>\r\n            <li>Artists</li>\r\n          </div>\r\n        </Link>\r\n        <Link href=\"/playlists\">\r\n          <div className={styles.link}>\r\n            <div className={styles.icon}>\r\n              <svg viewBox=\"0 0 24 24\">\r\n                <path d=\"M7,6H23a1,1,0,0,0,0-2H7A1,1,0,0,0,7,6Z\" />\r\n                <path d=\"M23,11H7a1,1,0,0,0,0,2H23a1,1,0,0,0,0-2Z\" />\r\n                <path d=\"M23,18H7a1,1,0,0,0,0,2H23a1,1,0,0,0,0-2Z\" />\r\n                <circle cx=\"2\" cy=\"5\" r=\"2\" />\r\n                <circle cx=\"2\" cy=\"12\" r=\"2\" />\r\n                <circle cx=\"2\" cy=\"19\" r=\"2\" />\r\n              </svg>\r\n            </div>\r\n            <li>Playlists</li>\r\n          </div>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\Others\\Git\\MusicApp\\music-player\\components\\playlists\\playlists.tsx",["121","122"],"import Link from \"next/link\";\r\nimport PlaylistInterface from \"../../utils/interfaces/Playlist\";\r\nimport styles from \"./Playlists.module.scss\";\r\n\r\ninterface Props extends React.ClassAttributes<any> {\r\n  playlists: PlaylistInterface[];\r\n}\r\n\r\nconst Playlist = ({ playlists }: Props) => {\r\n  return (\r\n    <div className={styles.playlists}>\r\n      {playlists.map(function (p, idx) {\r\n        const playlistLink = `/playlists/${p.id}`;\r\n\r\n        return (\r\n          <div className={styles.playlist} key={idx}>\r\n            <Link href={playlistLink}>\r\n              <img src={p.imageUrl} alt={p.title} />\r\n            </Link>\r\n            <p>{p.title}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","C:\\Others\\Git\\MusicApp\\music-player\\components\\search\\found-items-list.tsx",["123","124","125","126","127","128","129"],"import Link from \"next/link\";\r\nimport SearchItemInterface from \"../../utils/interfaces/SearchItem\";\r\nimport styles from \"./FoundItems.module.scss\";\r\n\r\ninterface IProps {\r\n  items: SearchItemInterface;\r\n}\r\n\r\nconst FoundItemsList = ({ items }: IProps) => {\r\n  return (\r\n    <div className={styles.items}>\r\n      <h3>Songs</h3>\r\n      {items.songs.map(function (s) {\r\n        const songLink = `/songs/${s.id}`;\r\n        return (\r\n          <Link href={songLink} key={s.id}>\r\n            <div>\r\n              <img src={s.imageUrl} alt={s.title} />\r\n              <div>\r\n                <p>Title: {s.title}</p>\r\n                <p>Author: {s.artistId}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n      {items.songs.length === 0 ? <NotFound /> : null}\r\n\r\n      <h3>Artists</h3>\r\n      {items.artists.map(function (a) {\r\n        const artistLink = `/artists/${a.id}`;\r\n        return (\r\n          <Link href={artistLink} key={a.id}>\r\n            <div>\r\n              <img src={a.url} alt={a.name} />\r\n              <div>\r\n                <h4>{a.name}</h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n      {items.artists.length === 0 ? <NotFound /> : null}\r\n\r\n      <h3>Playlists</h3>\r\n      {items.playlists.map(function (p) {\r\n        const playlistLink = `/playlists/${p.id}`;\r\n        return (\r\n          <Link href={playlistLink} key={p.id}>\r\n            <div>\r\n              <img src={p.imageUrl} alt={p.title} />\r\n              <div>\r\n                <p>{p.title}</p>\r\n                <p>Songs count: {p.songIds?.length}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n      {items.playlists.length === 0 ? <NotFound /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div id={styles.notFound}>\r\n      <img src=\"/images/not-found.png\" alt=\"not-found\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoundItemsList;\r\n","C:\\Others\\Git\\MusicApp\\music-player\\components\\search\\index.tsx",[],"C:\\Others\\Git\\MusicApp\\music-player\\components\\songs-list\\songs-list.tsx",["130","131"],"import Link from \"next/link\";\r\nimport SongInterface from \"../../utils/interfaces/Song\";\r\nimport styles from \"./SongsList.module.scss\";\r\n\r\ninterface Props extends React.ClassAttributes<any> {\r\n  songs: SongInterface[];\r\n}\r\n\r\nconst SongsList = (songs: Props) => {\r\n  return (\r\n    <div className={styles.songs}>\r\n      {songs.songs.map(function (s, idx) {\r\n        const songLink = `/songs/${s.id}`;\r\n\r\n        return (\r\n          <div className={styles.song} key={idx}>\r\n            <Link href={songLink}>\r\n              <img src={s.imageUrl} alt={s.title} />\r\n            </Link>\r\n            <p>{s.title}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongsList;\r\n",{"ruleId":"132","severity":1,"message":"133","line":22,"column":11,"nodeType":"134","endLine":22,"endColumn":53},{"ruleId":"135","severity":1,"message":"136","line":21,"column":11,"nodeType":"134","endLine":21,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":94,"column":11,"nodeType":"134","endLine":94,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":144,"column":19,"nodeType":"134","endLine":144,"endColumn":66},{"ruleId":"132","severity":1,"message":"133","line":151,"column":27,"nodeType":"134","endLine":151,"endColumn":71},{"ruleId":"137","severity":1,"message":"138","line":26,"column":3,"nodeType":"139","endLine":26,"endColumn":12,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"133","line":60,"column":11,"nodeType":"134","endLine":60,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":17,"column":13,"nodeType":"134","endLine":17,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":18,"column":15,"nodeType":"134","endLine":18,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":9,"column":11,"nodeType":"134","endLine":9,"endColumn":52},{"ruleId":"135","severity":1,"message":"136","line":8,"column":9,"nodeType":"134","endLine":8,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":21,"column":9,"nodeType":"134","endLine":21,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":31,"column":9,"nodeType":"134","endLine":31,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":17,"column":13,"nodeType":"134","endLine":17,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":18,"column":15,"nodeType":"134","endLine":18,"endColumn":53},{"ruleId":"135","severity":1,"message":"136","line":16,"column":11,"nodeType":"134","endLine":16,"endColumn":44},{"ruleId":"132","severity":1,"message":"133","line":18,"column":15,"nodeType":"134","endLine":18,"endColumn":53},{"ruleId":"135","severity":1,"message":"136","line":33,"column":11,"nodeType":"134","endLine":33,"endColumn":46},{"ruleId":"132","severity":1,"message":"133","line":35,"column":15,"nodeType":"134","endLine":35,"endColumn":47},{"ruleId":"135","severity":1,"message":"136","line":49,"column":11,"nodeType":"134","endLine":49,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":51,"column":15,"nodeType":"134","endLine":51,"endColumn":53},{"ruleId":"132","severity":1,"message":"133","line":68,"column":7,"nodeType":"134","endLine":68,"endColumn":58},{"ruleId":"135","severity":1,"message":"136","line":17,"column":13,"nodeType":"134","endLine":17,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":18,"column":15,"nodeType":"134","endLine":18,"endColumn":53},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.","JSXOpeningElement","@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSongUrl'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [song.songUrl] as a second argument to the useEffect Hook.","Identifier",["141"],{"desc":"142","fix":"143"},"Add dependencies array: [song.songUrl]",{"range":"144","text":"145"},[860,860],", [song.songUrl]"]